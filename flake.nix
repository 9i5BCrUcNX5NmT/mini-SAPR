{
  description = "Rust + Bevy development environment with VSCodium support";

  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-25.05";
    rust-overlay.url = "github:oxalica/rust-overlay";
    flake-utils.url = "github:numtide/flake-utils";
  };

  outputs = { self, nixpkgs, rust-overlay, flake-utils }:
    flake-utils.lib.eachDefaultSystem (system:
      let
        overlays = [ (import rust-overlay) ];
        pkgs = import nixpkgs {
          inherit system overlays;
        };

        # Rust toolchain —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ –¥–ª—è Bevy
        rustToolchain = pkgs.rust-bin.stable.latest.default.override {
          extensions = [ 
            "rust-src" 
            "rust-analyzer" 
            "clippy" 
            "rustfmt" 
          ];
        };

        # –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è Bevy (Linux)
        bevyDeps = with pkgs; [
          # –°–∏—Å—Ç–µ–º–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è Bevy
          pkg-config
          udev
          alsa-lib
          vulkan-loader
          xorg.libX11
          xorg.libXcursor
          xorg.libXi
          xorg.libXrandr
          libxkbcommon
          wayland
          
          # OpenGL –ø–æ–¥–¥–µ—Ä–∂–∫–∞
          libGL
          
          # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
          fontconfig
          freetype
        ];

        # –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        devTools = with pkgs; [
          # –†–µ–¥–∞–∫—Ç–æ—Ä
          vscodium
          
          # Git –∏ —É—Ç–∏–ª–∏—Ç—ã
          git
          just # Make-–ø–æ–¥–æ–±–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç
          
          # –û—Ç–ª–∞–¥–∫–∞ –∏ –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
          gdb
          valgrind
          
          # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
          cargo-watch    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞
          cargo-edit     # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Cargo.toml
          cargo-audit    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
          cargo-outdated # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        ];

      in
      {
        # Development shell
        devShells.default = pkgs.mkShell {
          buildInputs = [ rustToolchain ] ++ bevyDeps ++ devTools;
          
          # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
          LD_LIBRARY_PATH = pkgs.lib.makeLibraryPath bevyDeps;
          
          # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è Vulkan
          VULKAN_SDK = "${pkgs.vulkan-headers}";
          VK_LAYER_PATH = "${pkgs.vulkan-validation-layers}/share/vulkan/explicit_layer.d";
          
          # –í–∫–ª—é—á–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é –ª–∏–Ω–∫–æ–≤–∫—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –≤ dev —Ä–µ–∂–∏–º–µ
          BEVY_DYNAMIC_LINKING = "1";
          
          shellHook = ''
            echo "ü¶Ä Rust + Bevy development environment"
            echo "üìù VSCodium –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É 'codium'"
            echo "üîß Rust version: $(rustc --version)"
            echo "üì¶ Cargo version: $(cargo --version)"
            echo "üéØ rust-analyzer –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è VSCode"
            echo ""
            echo "üöÄ –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
            echo "  just dev      - –∑–∞–ø—É—Å–∫ —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –ª–∏–Ω–∫–æ–≤–∫–æ–π"
            echo "  just build    - —Å–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞"
            echo "  just test     - –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
            echo "  just watch    - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞"
            echo "  codium .      - –æ—Ç–∫—Ä—ã—Ç—å VSCodium"
            echo ""
            '';
        };

        # –°–±–æ—Ä–∫–∞ —Ä–µ–ª–∏–∑–Ω–æ–π –≤–µ—Ä—Å–∏–∏
        packages.default = pkgs.rustPlatform.buildRustPackage {
          pname = "bevy-app";
          version = "0.1.0";
          src = ./.;
          
          cargoLock = {
            lockFile = ./Cargo.lock;
          };
          
          nativeBuildInputs = [ pkgs.pkg-config ];
          buildInputs = bevyDeps;
          
          # –û—Ç–∫–ª—é—á–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é –ª–∏–Ω–∫–æ–≤–∫—É –¥–ª—è —Ä–µ–ª–∏–∑–∞
          cargoBuildFlags = [ "--no-default-features" ];
          
          # –ö–æ–ø–∏—Ä—É–µ–º assets –µ—Å–ª–∏ –µ—Å—Ç—å
          postInstall = ''
            if [ -d "assets" ]; then
              cp -r assets $out/bin/
            fi
          '';
          
          meta = with pkgs.lib; {
            description = "Bevy game developed with Nix";
            license = licenses.mit;
          };
        };

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
        packages.dev-container = pkgs.dockerTools.buildImage {
          name = "bevy-dev";
          tag = "latest";
          
          contents = [ self.devShells.${system}.default ];
          
          config = {
            Cmd = [ "${pkgs.bash}/bin/bash" ];
            WorkingDir = "/workspace";
          };
        };
      }
    );
}
